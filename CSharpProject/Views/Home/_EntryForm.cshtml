@model CSharpProject.Models.Entry
@using CSharpProject.Models

@using (Html.BeginForm())

{

    @Html.ValidationSummary("The following errors were found:", new { @class = "alert alert-danger"})

    <div class="row">

        <div class="col-md-12">

            <div class="form-group">
                @Html.LabelFor(m => m.Name, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Name, new {@class = "form-control"})
            </div>

            @*<div class="form-group">
                @Html.LabelFor(m => m.ColorId, new { @class = "control-label" })
                @Html.DropDownListFor(m => m.ColorId, 
               (SelectList)ViewBag.ColorsSelectListItems, "", new { @class = "form-control" })
            </div>*@

            <div class="form-group">
                @Html.LabelFor(m => m.Color, new { @class = "control-label" })
                <div>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Color,
                            Entry.ColorValue.Yellow) @Entry.ColorValue.Yellow
                        </label>

                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Color,
                            Entry.ColorValue.Red) @Entry.ColorValue.Red
                        </label>

                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Color,
                            Entry.ColorValue.Orange) @Entry.ColorValue.Orange
                        </label>

                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Color,
                            Entry.ColorValue.Purple) @Entry.ColorValue.Purple
                        </label>

                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Color,
                            Entry.ColorValue.Green) @Entry.ColorValue.Green
                        </label>

                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Color,
                            Entry.ColorValue.Brown) @Entry.ColorValue.Brown
                        </label>

                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Color,
                            Entry.ColorValue.White) @Entry.ColorValue.White
                        </label>
                    </div>
                </div>


            <div class="form-group">
                @Html.LabelFor(m => m.BloomSeason, new { @class = "control-label" })
                <div>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.BloomSeason,
                            Entry.BloomSeasonValue.Early) @Entry.BloomSeasonValue.Early
                    </label>

                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.BloomSeason,
                            Entry.BloomSeasonValue.Mid) @Entry.BloomSeasonValue.Mid
                        </label>

                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.BloomSeason,
                            Entry.BloomSeasonValue.Late) @Entry.BloomSeasonValue.Late
                        </label>

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Tetraploid, new { @class = "control-label" })
                <div>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Tetraploid,
                            Entry.TetraploidValue.Yes) @Entry.TetraploidValue.Yes
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Tetraploid,
                            Entry.TetraploidValue.No) @Entry.TetraploidValue.No
                    </label>

                    </div>
                </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Height, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Height, new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.BloomSize, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.BloomSize, new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Tetraploid, new { @class = "control-label" })
                <div>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Reblooms,
                            Entry.RebloomsValue.Yes) @Entry.RebloomsValue.Yes
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(m => m.Reblooms,
                            Entry.RebloomsValue.No) @Entry.RebloomsValue.No
                        </label>

                    </div>
                </div>
  
        </div>

        <div class="col-md-12">
            <div class="pad-top">
                <button type="submit" class="btn btn-success btn-lg margin-right">
                    <span class="glyphicon glyphicon-save"></span> Save
                </button>
                <a href="@Url.Action("Browse")" class="btn btn-warning btn-lg">
                    <span class="glyphicon glyphicon-remove"></span> Cancel
                </a>
            </div>
        </div>




    </div>



}